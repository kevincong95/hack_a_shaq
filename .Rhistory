points(tme, mt, type = "l", col = "red")
mt = filter(ts, rep(1, 5)/5)
tme = 1: length(ts)
plot(tme, ts, type = "l", xlab = "Quarters", ylab = "Gas Consumption", main = "Logarithm of the UK gas consumption data")
points(tme, mt, type = "l", col = "red")
mt = filter(ts, rep(1, 4)/4)
tme = 1: length(ts)
plot(tme, ts, type = "l", xlab = "Quarters", ylab = "Gas Consumption", main = "Logarithm of the UK gas consumption data")
points(tme, mt, type = "l", col = "red")
wts = c(2/3, 1, 1, 1, 2/3, 1, 1, 1, 2/3)
wts = wts/sum(wts)
mt = filter(ts, wts)
tme = 1: length(ts)
plot(tme, ts, type = "l", xlab = "Quarters", ylab = "Gas Consumption", main = "Logarithm of the UK gas consumption data")
points(tme, mt, type = "l", col = "red")
mt = filter(ts, rep(1, 9)/9)
tme = 1: length(ts)
plot(tme, ts, type = "l", xlab = "Quarters", ylab = "Gas Consumption", main = "Logarithm of the UK gas consumption data")
points(tme, mt, type = "l", col = "red")
setwd("~/Desktop/stat153")
yahoo <- read.csv("yahoo.csv")
yahoo
fcos <- function(t){cos(2*pi*f*t/d)}
fsin <- function(t){sin(2*pi*f*t/d)}
t <- 1: length(yahoo)
d <- 12
f <- 1 #Look for potential seasonal trend.
fcos <- function(t){cos(2*pi*f*t/d)}
fsin <- function(t){sin(2*pi*f*t/d)}
t <- 1: length(yahoo)
lin.mod <- lm(USAccDeaths ~ 1 + fcos + fsin)
fcos = function(t){cos(2*pi*f*t/d)}
fsin = function(t){sin(2*pi*f*t/d)}
t <- 1: length(yahoo)
lin.mod <- lm(USAccDeaths ~ 1 + fcos + fsin)
lin.mod <- lm(yahoo ~ 1 + fcos + fsin)
d <- 12
f <- 1 #Look for potential seasonal trend.
t <- 1: length(yahoo)
fcos = function(t){cos(2*pi*f*t/d)}
fsin = function(t){sin(2*pi*f*t/d)}
lin.mod <- lm(yahoo ~ 1 + fcos + fsin)
USAccDeaths
typeof(USAccDeaths)
USAccDeaths[1]
yahoo[1]
yahoo
typeof(yahoo)
typeof(yahoo[1])
t = 1: length(USAccDeaths)
f = 1
d = 12
v1 = cos(2*pi*f*t/d)
v2 = sin(2*pi*f*t/d)
lin.mod = lm(USAccDeaths ~ 1 + v1 + v2)
type(USAccDeaths)
typeof(USAccDeaths)
library("zoo")
install.packages("zoo")
library("zoo")
yahoo <- read.csv("yahoo.csv")
yahoo[1]
yahoo[2]
typeof(yahoo[1])
typeof(yahoo[1,1])
yahoo[1,1]
length(yahoo[1,1])
zoo.as.yearmon("2014-01")
as.yearmon("2014-01")
yahoo <- read.csv("yahoo.csv")
yahoo
yahoo <- read.csv("yahoo.csv")
yahoo
d <- 12
f <- 1 #Look for potential seasonal trend.
t <- 1: length(yahoo)
t
yahoo <- read.csv("yahoo.csv")
typeof(yahoo)
as.yearmon(yahoo[1])
as.yearmon(yahoo[1].unlist())
as.yearmon(unlist(yahoo[1]))
yearmons <- as.yearmon(unlist(yahoo[1]))
typeof(yahoo[2])
prices <- unlist(yahoo[2])
USAccDeaths
typeof(USAccDeaths)
length(USAccDeaths)
typeof(prices)
length(prices)
d <- 12
f <- 1 #Look for potential seasonal trend.
t <- 1: length(prices)
fcos = function(t){cos(2*pi*f*t/d)}
fsin = function(t){sin(2*pi*f*t/d)}
lin.mod <- lm(prices ~ 1 + fcos + fsin)
typeof(fcos)
fcos = cos(2*pi*f*t/d)
fsin = sin(2*pi*f*t/d)
lin.mod <- lm(prices ~ 1 + fcos + fsin)
plot(t, prices, type = "o", xlab = "Time", ylab = "Price", main = "Yahoo Stock Prices 2004-2017")
plot(yearmons, prices, type = "o", xlab = "Time", ylab = "Price", main = "Yahoo Stock Prices 2004-2017")
points(yearmons, lin.mod$fitted, type = "l", col = "red")
t <- 1: length(prices)
lin.mod <- lm(prices ~ 1 + t + t^2)
points(yearmons, lin.mod$fitted, type = "l", col = "red")
lin.mod <- lm(prices ~ t + t^2)
points(yearmons, lin.mod$fitted, type = "l", col = "red")
plot(yearmons, prices, type = "o", xlab = "Time", ylab = "Price", main = "Yahoo Stock Prices 2004-2017")
quadratic.mod <- lm(prices ~ t + t^2)
points(yearmons, lin.mod$fitted, type = "l", col = "red")
t <- 1: length(prices)
plot(t, prices, type = "o", xlab = "Time", ylab = "Price", main = "Yahoo Stock Prices 2004-2017")
quadratic.mod <- lm(prices ~ t + t^2)
points(yearmons, lin.mod$fitted, type = "l", col = "red")
points(t, lin.mod$fitted, type = "l", col = "red")
quadratic.model <- lm(prices ~ t + t^2)
points(t, lin.mod$fitted, type = "l", col = "red")
quadratic.mod <- lm(prices ~ t + t^2)
points(t, quadratic.mod$fitted, type = "l", col = "red")
plot(t, prices, type = "o", xlab = "Time", ylab = "Price", main = "Yahoo Stock Prices 2004-2017")
quadratic.mod <- lm(prices ~ t + t^2)
points(t, quadratic.mod$fitted, type = "l", col = "red")
summary(quadratic.mod)
t2 <- t^2
t2
quadratic.mod <- lm(prices ~ t + t2)
points(t, quadratic.mod$fitted, type = "l", col = "red")
prices <- unlist(yahoo[2])
t <- 1: length(prices)
t2 <- t^2
plot(t, prices, type = "o", xlab = "Time", ylab = "Price", main = "Yahoo Stock Prices 2004-2017")
quadratic.mod <- lm(prices ~ t + t2)
points(t, quadratic.mod$fitted, type = "l", col = "red")
summary(quadratic.mod)
plot.ts(t, prices, type = "o", xlab = "Time", ylab = "Price", main = "Yahoo Stock Prices 2004-2017")
points(t, quadratic.mod$fitted, type = "l", col = "red")
plot(t, quadratic.mod$residuals, type = "o", xlab = "Time", ylab = "Residuals after fitting quadratic model")
sd(quadratic.mod$residuals)
acf(quadratic.mod$residuals, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of the Residuals after Removing seasonality")
plot(t, USAccDeaths, type = "o", xlab = "Time", ylab = "Deaths", main = "Accidental Deaths in the US 1973-1978 and Smoothed Seasonality Estimate")
t = 1: length(USAccDeaths)
plot(t, USAccDeaths, type = "o", xlab = "Time", ylab = "Deaths", main = "Accidental Deaths in the US 1973-1978 and Smoothed Seasonality Estimate")
t = 1: length(freqs)
yahoo <- read.csv("yahoo.csv")
yearmons <- as.yearmon(unlist(yahoo[1]))
freqs <- unlist(yahoo[2])
t <- 1: length(freqs)
plot(t, freqs, type = "o", xlab = "Time", ylab = "Deaths", main = "Yahoo search freqencies 2004-2017")
movavg = rollmean(freqs, 5) #from the zoo library
length(movavg)
plot(t, movavg, type = "l", col = "red")
plot(t[3:153], movavg, type = "l", col = "red")
length(t[3:153])
plot(t[3:155], movavg, type = "l", col = "red")
points(t, quadratic.mod$fitted, type = "l", col = 'blue')
c(c(37,38), movavg, c(38,37))
padded = c(c(37,38), movavg, c(38,37))
res.sm = freqs - padded
plot(t, res.sm, type = "l", main = "Residuals after Smoothing by Moving Average")
acf(res.sm, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of the Residuals after Moving Average Smoothing")
diff.yahoo = diff(freqs)
diff.yahoo
plot(t[1:length(t)-1], diff.yahoo, type = "l", main = "Step-by-step differences of Yahoo search frequencies")
acf(diff.yahoo, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of Differentials")
chipotle <- read.csv("chipotle.csv")
yearmons.c <- as.yearmon(unlist(chipotle[1]))
freqs.c <- unlist(chipotle[2])
chipotle
freqs.c <- unlist(chipotle[2])
chipotle
type(chipotle)
typeof(chipotle)
yearmons.c
chipotle[1]
chipotle <- read.csv("chipotle.csv")
yearmons.c <- as.yearmon(unlist(chipotle[1]))
freqs.c <- unlist(chipotle[2])
t <- 1: length(freqs.c)
plot(t, freqs.c, type = "o", xlab = "Time", ylab = "freq", main = "Chipotle search frequencies 2004-2017")
movavg.chipotle = rollmean(freqs.c, 5) #from the zoo library
plot(t[3:155], movavg.chipotle, type = "l", col = "red")
points(t, freqs.c, type = "o", xlab = "Time", ylab = "freq", main = "Chipotle search frequencies 2004-2017")
movavg.chipotle = rollmean(freqs.c, 5) #from the zoo library
plot(t[3:155], movavg.chipotle, type = "l", col = "red")
points(t, freqs.c, type = "o", xlab = "Time", ylab = "freq", main = "Chipotle search frequencies 2004-2017")
padded.c = c(c(14,14), movavg.chipotle, c(70,66))
res.sm = freqs.c - padded.c
acf(res.smy, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of the Residuals after Moving Average Smoothing")
res.smc = freqs.c - padded.c
acf(res.smc, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of the Residuals after Moving Average Smoothing")
diff.chipotle = diff(freqs.c)
plot(t[1:length(t)-1], diff.chipotle, type = "l", main = "Step-by-step differences of Chipotle search frequencies")
acf(diff.chipotle, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of Differentials")
frisbee <- read.csv("frisbee.csv")
frisbee <- read.csv("frisbee.csv")
yearmons.f <- as.yearmon(unlist(frisbee[1]))
freqs.f <- unlist(frisbee[2])
t <- 1: length(freqs.f)
points(t, freqs.f, type = "o", xlab = "Time", ylab = "freq")
plot(t, freqs.f, type = "o", xlab = "Time", ylab = "freq", main = "Frisbee search frequencies 2004-2017")
plot(t, USAccDeaths, type = "o", xlab = "Time", ylab = "freq", main = "Monthly Frisbee search frequencies 1973-1978")
plot(t, freqs.f, type = "o", xlab = "Time", ylab = "freq", main = "Monthly Frisbee search frequencies 1973-1978")
points(t, lin.mod$fitted, type = "l", col = "red")
d <- 12
v1 = cos(2*pi*t/d)
v2 = sin(2*pi*t/d)
lin.mod = lm(freqs.f ~ 1 + v1 + v2)
plot(t, freqs.f, type = "o", xlab = "Time", ylab = "freq", main = "Monthly Frisbee search frequencies 1973-1978")
points(t, lin.mod$fitted, type = "l", col = "red")
plot(t, lin.mod$residuals, type = "o", xlab = "Month", ylab = "Residuals after fitting the seasonality function")
sd(lin.mod$residuals)
acf(lin.mod$residuals, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of the Residuals after Removing seasonality")
v3 = cos(2*pi*2*t/d)
v4 = sin(2*pi*2*t/d)
lin.mod = lm(freqs.f ~ 1 + v1 + v2 + v3 + v4)
plot(t, freqs.f, type = "o", xlab = "Month", ylab = "freq", main = "Monthly Frisbee search frequencies 1973-1978")
points(t, lin.mod$fitted, type = "l", col = "red")
plot(t, lin.mod$residuals, type = "o", xlab = "Month", ylab = "Residuals after fitting the seasonality function")
sd(lin.mod$residuals)
acf(lin.mod$residuals, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of the Residuals after Removing seasonality")
lin.mod = lm(freqs.f ~ 1 + v1 + v2 + t)
plot(t, freqs.f, type = "o", xlab = "Month", ylab = "freq", main = "Monthly Frisbee search frequencies 1973-1978")
points(t, lin.mod$fitted, type = "l", col = "red")
plot(t, lin.mod$residuals, type = "o", xlab = "Month", ylab = "Residuals after removing deterministic trend")
sd(lin.mod$residuals)
acf(lin.mod$residuals, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of the Residuals after Removing seasonality")
lin.mod = lm(freqs.f ~ 1 + v1 + v2 + 1/t)
plot(t, freqs.f, type = "o", xlab = "Month", ylab = "freq", main = "Monthly Frisbee search frequencies 1973-1978")
points(t, lin.mod$fitted, type = "l", col = "red")
plot(t, lin.mod$residuals, type = "o", xlab = "Month", ylab = "Residuals after removing deterministic trend")
sd(lin.mod$residuals)
typeof(v1)
length(v1)
deseasoned.f <- freqs.f - v1 - v2
lin.mod = lm(deseasoned.f ~ 1 + v1 + v2)
plot(t, deseasoned.f, type = "o", xlab = "Month", ylab = "freq", main = "Monthly Frisbee search frequencies 1973-1978")
deseasoned.f
diff.f1 = diff(freqs.f)
plot(t[1:length(t)-1], diff.f1, type = "l", main = "Order 1 differences of Frisbee search frequencies")
acf(diff.f1, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of Order 1 Differentials")
diff.f2 = diff(diff.f1)
plot(t[1:length(t)-1], diff.f2, type = "l", main = "Order 2 differences of Frisbee search frequencies")
plot(t[1:length(t)-2], diff.f2, type = "l", main = "Order 2 differences of Frisbee search frequencies")
plot(t[2:length(t)-1], diff.f2, type = "l", main = "Order 2 differences of Frisbee search frequencies")
length(diff.f2)
plot(t[1:length(t)-2], diff.f2, type = "l", main = "Order 2 differences of Frisbee search frequencies")
plot(t[1:(length(t)-2)], diff.f2, type = "l", main = "Order 2 differences of Frisbee search frequencies")
acf(diff.f2, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of Order 2 Differentials")
diff.f3 = diff(diff.f2)
plot(t[1:(length(t)-3)], diff.f3, type = "l", main = "Order 3 differences of Frisbee search frequencies")
acf(diff.f3, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of Order 3 Differentials")
diff.f4 = diff(diff.f3)
plot(t[1:(length(t)-4)], diff.f4, type = "l", main = "Order 4 differences of Frisbee search frequencies")
acf(diff.f4, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of Order 4 Differentials")
diff.f5 = diff(diff.f4)
plot(t[1:(length(t)-5)], diff.f5, type = "l", main = "Order 5 differences of Frisbee search frequencies")
acf(diff.f5, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of Order 5 Differentials")
cubic.mod = lm(sales ~ years^3 + years^2 + years^1 + 1)
y2 = years^2
years = c(47, 48, 49, 50)
y2 = years^2
y3 = years^3
sales = c(35756, 39981, 52874, 63214)
cubic.mod = lm(sales ~ y3 + y2 + years + 1)
summary(cubic.mod)
-13332227*51^3 + 273638*51^2 - 1870*51 + 216350389
-13332227*(51^3) + 273638*(51^2) - 1870*51 + 216350389
-1870*(51^3) + 273638*(51^2) - 13332227*51 + 216350389
frisbee <- read.csv("frisbee.csv")
yearmons.f <- as.yearmon(unlist(frisbee[1]))
freqs.f <- unlist(frisbee[2])
t <- 1: length(freqs.f)
points(t, freqs.f, type = "o", xlab = "Month", ylab = "freq")
plot(t, freqs.f, type = "o", xlab = "Month", ylab = "freq", main = "Frisbee search frequencies 2004-2017")
d <- 12
v1 = cos(2*pi*t/d)
v2 = sin(2*pi*t/d)
lin.mod = lm(freqs.f ~ 1 + v1 + v2)
plot(t, freqs.f, type = "o", xlab = "Month", ylab = "freq", main = "Monthly Frisbee search frequencies 1973-1978")
points(t, lin.mod$fitted, type = "l", col = "red")
plot(t, lin.mod$residuals, type = "o", xlab = "Month", ylab = "Residuals after fitting the seasonality function")
sd(lin.mod$residuals)
acf(lin.mod$residuals, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of the Residuals after Removing seasonality")
v3 <- t^2
lin.mod = lm(freqs.f ~ 1 + v1 + v2 + v3)
plot(t, deseasoned.f, type = "o", xlab = "Month", ylab = "freq", main = "Monthly Frisbee search frequencies 1973-1978")
plot(t, freqs.f, type = "o", xlab = "Month", ylab = "freq", main = "Monthly Frisbee search frequencies 1973-1978")
points(t, lin.mod$fitted, type = "l", col = "red")
plot(t, lin.mod$residuals, type = "o", xlab = "Month", ylab = "Residuals after removing deterministic trend")
sd(lin.mod$residuals)
acf(lin.mod$residuals, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of the Residuals after Removing seasonality")
lin.mod = lm(freqs.f ~ 1 + v1 + v2 + v3 + t)
plot(t, freqs.f, type = "o", xlab = "Month", ylab = "freq", main = "Monthly Frisbee search frequencies 1973-1978")
points(t, lin.mod$fitted, type = "l", col = "red")
plot(t, lin.mod$residuals, type = "o", xlab = "Month", ylab = "Residuals after removing deterministic trend")
sd(lin.mod$residuals)
acf(lin.mod$residuals, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of the Residuals after Removing seasonality")
frisbee <- read.csv("frisbee.csv")
yearmons.f <- as.yearmon(unlist(frisbee[1]))
freqs.f <- unlist(frisbee[2])
t <- 1: length(freqs.f)
points(t, freqs.f, type = "o", xlab = "Month", ylab = "freq")
plot(t, freqs.f, type = "o", xlab = "Month", ylab = "freq", main = "Frisbee search frequencies 2004-2017")
t = 1: length(freqs.f)
s.hat = rep(0, 12) #this vector (initialized to 0) will have the seasonality estimate after the following loop
for(i in 1:12)
{
ind.i = seq(i, length(freqs.f), 12)
s.hat[i] = mean(freqs.f[ind.i])
}
s.hat
full.s = rep(0, length(freqs.f))
for(j in 1: length(freqs.f))
{
i = j %% 12
if(i == 0) {i = 12}
full.s[j] = s.hat[i]
}
plot(t, freqs.f, type = "o", xlab = "Time", ylab = "Freqs", main = "Frisbee Search Frequencies 2004-2017 and Smoothed Seasonality Estimate")
points(t, full.s, type = "l", col = "red")
res.smf = freqs.f - full.s
plot(t, res.smf, type = "l", main = "Residuals after Smoothing out Seasonality")
acf(res.smf, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of Frisbee Residuals after Smoothing out seasonality")
chipotle <- read.csv("chipotle.csv")
yearmons.c <- as.yearmon(unlist(chipotle[1]))
freqs.c <- unlist(chipotle[2])
t <- 1: length(freqs.c)
s.hat = rep(0, 12) #this vector (initialized to 0) will have the seasonality estimate after the following loop
for(i in 1:12)
{
ind.i = seq(i, length(freqs.c), 12)
s.hat[i] = mean(freqs.c[ind.i])
}
s.hat
full.c = rep(0, length(freqs.c))
for(j in 1: length(freqs.c))
{
i = j %% 12
if(i == 0) {i = 12}
full.c[j] = s.hat[i]
}
plot(t, freqs.c, type = "o", xlab = "Time", ylab = "Freq", main = "Chipotle Search Frequencies 2004-2017 and Smoothed Seasonality Estimate")
points(t, full.c, type = "l", col = "red")
res.smc = freqs.c - full.c
plot(t, res.smc, type = "l", main = "Residuals after Smoothing out Seasonality")
plot(t, res.smc, type = "l", main = "Residuals after Smoothing out Seasonality")
acf(res.smc, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of the Residuals after Smoothing out seasonality")
lc = log(freqs.c)
plot(lc)
plot(t, lc)
lmod = lm(lc ~ 1 + t)
summary(lmod)
?filter
plot.ts(t, lc, type = "o", xlab = "Time", ylab = "log(Freqs)", main = "Log-smoothed Chipotle search freqencies 2004-2017")
plot(t, lmod$residuals, type = "o", xlab = "Time", ylab = "Residuals after fitting logarithmic model")
sd(lmod$residuals) #4.225901
acf(lmod$residuals, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of the residuals after removing logarithmic trend")
diff.logc = diff(lc)
plot(t[1:length(t)-1], diff.logc, type = "l", main = "Step-by-step differences of log(Chipotle) search frequencies")
acf(diff.logc, lag.max = 20, type = "correlation", plot = T, main = "Correlogram of Differentials")
lc = log(freqs.c)
write.csv(criticalGames, file = "criticalGames.csv")
getwd
getwd()
setwd("~/Desktop/hack_a_shaq")
plot.ts(sim_data, ylab = "Simulated Values", main = "Simulated Series")
sim_data = arima.sim(list(ar = c(0.5, -0.5), ma = c(-0.5, 0.25)), n=300)
plot.ts(sim_data, ylab = "Simulated Values", main = "Simulated Series")
acf(sim_data, main = "Sample ACF of Simulated Series")
X0 <- rnorm(1, 0, sqrt(4/3))
W <- rnorm(100, 0, 1)
X <- rep(NA, 100) #initializes the X vector
X[1] <- 0.7*X0 + W[1] #manually computes X1
for (i in 2:100) {
X[i] <- 0.7*X[i-1] + W[i]
}
plot(X, type = "l", xlab = "t", ylab = "Values",
main = expression(paste("Simulated AR(1) with ", phi == 0.7, ", ", sigma^2 == 1)))
plotARMAacf <- function(ar = numeric(),
ma = numeric(),
lag.max = 15,
pacf = FALSE) {
arOrder <- length(ar)
maOrder <- length(ma)
if (arOrder == 0) {
plotTitle <- paste0("MA(", maOrder , ")")
} else if (maOrder == 0) {
plotTitle <- paste0("AR(", arOrder, ")")
} else {
plotTitle <- paste0("ARMA(", arOrder, ", ", maOrder,
")")
}
plotTitle <- paste("Theoretical ACF of", plotTitle)
acf_values <- ARMAacf(ar, ma, lag.max, pacf)
plot(as.integer(names(acf_values)),
acf_values,
type='h',
xlim=c(1, lag.max),
ylim=c(-1, 1),
main=plotTitle,
xlab="Lag",
ylab=ifelse(pacf, "PACF", "ACF"))
abline(h=0)
}
findMAroots <- function(ma = numeric()) {
roots <- round(polyroot(c(1, ma)), 4) #finds roots
roots_statement <- paste0("Roots: ", paste0(roots, collapse=', '))
moduli <- round(Mod(roots), 4) #calculates modulus
moduli_statement <- paste0("Moduli: ", paste0(moduli, collapse=', '))
return(list(roots_statement, moduli_statement))
}
findARroots <- function(ar = numeric()) {
roots <- round(polyroot(c(1, ar)), 4)
roots_statement <- paste0("Roots: ", paste0(roots, collapse=', '))
moduli <- round(Mod(roots), 4)
moduli_statement <- paste0("Moduli: ", paste0(moduli, collapse=', '))
return(list(roots_statement, moduli_statement))
}
plotARMAacf(ar = c(0.5, -0.5), ma = c(-0.5, 0.25))
findARroots(c(-0.5, 0.5))
findMAroots(c(-0.5, 0.25))
X0 <- rnorm(1, 0, sqrt(4/3))
W <- rnorm(100, 0, 1)
X <- rep(NA, 100) #initializes the X vector
X[1] <- 0.5*X0 + W[1] #manually computes X1
for (i in 2:100) {
X[i] <- 0.5*X[i-1] + W[i]
}
Wt <- rt(1000, 5)
Wt <- rt(1000, 5)
X <- rep(NA, 1000)
X[1] <- Wt[1]
for (i in 2:1000) {
X[i] <- 0.5*X[i-1] + Wt[i]
}
plot(X[901:1000], type = "l", xlab = "t", ylab = "Values",
main = expression(paste("Simulated AR(1) with 5 df Student-t distribution,", phi == 0.5)))
source('~/.active-rstudio-document', echo=TRUE)
Xt
Wt
Wt <- rt(1000, 5)
Xt <- rep(NA, 1000)
Xt[1] <- Wt[1]
for (i in 2:1000) {
Xt[i] <- 0.5*X[i-1] + Wt[i]
}
Xt
Wt <- rt(1000, 5)
Xt <- rep(NA, 1000)
Xt[1] <- Wt[1]
for (i in 2:1000) {
Xt[i] <- 0.5*Xt[i-1] + Wt[i]
}
plot(Xt[901:1000], type = "l", xlab = "t", ylab = "Values",
main = expression(paste("Simulated AR(1) with 5 df Student-t distribution,", phi == 0.5)))
X0 <- rnorm(1, 0, sqrt(4/3))
W <- rnorm(100, 0, 1)
X <- rep(NA, 100) #initializes the X vector
X[1] <- 0.5*X0 + W[1] #manually computes X1
for (i in 2:100) {
X[i] <- 0.5*X[i-1] + W[i]
}
plot(X, type = "l", xlab = "t", ylab = "Values",
main = expression(paste("Simulated AR(1) with ", phi == 0.5, ", ", sigma^2 == 1)))
Wt
R <- matrix(c(2.25, 4.5. 4.5, 6.25), nrow = 2, ncol = 2, byrow = TRUE)
R <- matrix(c(2.25, 4.5, 4.5, 6.25), nrow = 2, ncol = 2, byrow = TRUE)
eigen(R)
typeof(eigen(R))
eigs <- eigen(R)
eigs[1]
eigs[2]
eigs[2][,1]
typeof(eigs[2])
matrix(eigs[2])
matrix(eigs[2], nrow = 2, ncol = 2)
eigs[2][,1]
matrix(eigs[2], nrow = 2, ncol = 2)[,1]
matrix(eigs[2])
matrix(eigs[2])[,1]
vect <- matrix(unlist(eigs[2]), nrow = 2)
vect
vect <- matrix(unlist(eigs[2]), nrow = 2)
vect[,1]
vect[,2]
X1 <- rnorm(100, 3, 3)
Y <- rnorm(100, 4, 2)
X2 <- rep(NA, 100)
for i in (1:100) {
X2[i] <- 0.5*X1[i] + Y
for (i in c(1:100)) {
X2[i] <- 0.5*X1[i] + Y
}
for (i in c(1:100)) {
X2[i] <- 0.5*X1[i] + Y[i]
war
}
for (i in c(1:100)) {
X2[i] <- 0.5*X1[i] + Y[i]
}
library(ggplot2)
mu <- c(3, 5.5)
qplot(X1, X2, xlim =c(-15, 15), ylim = c(-15, 15), xlab = "X1 value", ylab = "X2 value")
mu1 <- 3
mu2 <- 5.5
mu1 <- mean(X1)
mu2 <- mean(X2)
c(mu1, mu2)
mu <- c(mean(X1), mean(X2))
cov(X1, X2)
mean(c(X1, X2))
